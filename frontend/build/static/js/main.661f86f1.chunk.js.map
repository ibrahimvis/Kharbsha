{"version":3,"sources":["components/user/Login.js","components/user/Signup.js","components/user/User.js","components/home/privatepage.js","components/navbar/Navb.js","components/home/Home.js","components/firebase/firebase.js","components/game/Game.js","components/user/GameRedirect.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","useState","login","setLogin","setIsLogin","onChangeInput","target","name","value","className","htmlFor","type","placeholder","onChange","e","onClick","preventDefault","axios","post","then","res","data","token","localStorage","setItem","userLogin","history","push","catch","err","setTimeout","console","log","onSubmit","Signup","register","setRegister","changeHandler","registerHandler","a","message","User","state","isLoginOpen","this","setState","showLogin","showSingup","Component","privatepage","Container","Row","xs","Col","Button","block","Navb","authNavDetails","user","Nav","Link","as","to","logout","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Home","fluid","size","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getPlayerRef","host","sessionID","ref","getDrawingRef","getTimerRef","getChatRef","getWordRef","getGameRef","getSessionRef","Game","myRef","React","createRef","Sketch","p","player","playersCount","gameDB","playersDB","drawingDB","chatDB","wordDB","timer","timerInterval","players","isDrawing","words","word","points","lang","isFormating","answered","penwidth","r","g","b","Word","queryString","parse","location","search","wordText","document","querySelector","wordArr","split","formatedWord","map","m","amount","parseInt","length","innerHTML","join","pickRand","count","rand","Math","floor","random","currentWord","startRound","once","playersData","val","gameData","getPlayer","Object","keys","start","update","get","wordsArry","randomWords","renderWordsBtn","gameScreen","$","css","append","wordsBtn","display","justifyContent","position","width","top","left","color","forEach","fontSize","backgroundColor","on","remove","loop","toUpperCase","nextRound","tmpIndex","key","index","drawKeyDown","x","mouseX","y","mouseY","px","pmouseX","py","pmouseY","drawKeyDownAndMoved","mouseIsPressed","gameTimerController","Date","setInterval","seconds","renderWord","clearInterval","pickColor","newR","newG","newB","pickPenwidth","newPenwidth","setup","match","params","sessionid","tmp","playerObj","score","clear","set","hasOwnProperty","chatDiv","select","chatInp","msg","limitToLast","playerName","answer","li","createElement","playerNameEle","class","parent","msgEle","canvasDiv","getElementById","offsetWidth","height","offsetHeight","canvas","createCanvas","mousePressed","mouseMoved","startGame","noLoop","draw","stroke","strokeWeight","noFill","i","point","line","windowResized","resizeCanvas","myP5","p5","current","style","marginTop","GameRedirect","check","sessionDB","username","setRedirect","tmpArry","redirect","renderRedirect","playersCards","langSelect","App","isAuth","logoutHandler","removeItem","headers","getItem","decode","exact","path","component","render","Boolean","window","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.661f86f1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = (props) => {\r\n  const [login, setLogin] = useState({});\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  let onChangeInput = ({ target: { name, value } }) => {\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/api/auth/login\", login)\r\n      .then((res) => {\r\n        if (res.data.token) {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          props.userLogin(res.data.token);\r\n          props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLogin(true);\r\n        setTimeout(() => {\r\n          setIsLogin(false);\r\n        }, 4000);\r\n        console.log(\"email or password not correct\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner-container\">\r\n      <div className=\"box\">\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"emil\"></label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            className=\"login-input input-xlarge\"\r\n            placeholder=\"Email Address\"\r\n            onChange={(e) => onChangeInput(e)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\"></label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => onChangeInput(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success btn-lg\"\r\n            onClick={(e) => onSubmit(e)}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Signup = (props) => {\r\n  const [register, setRegister] = useState({});\r\n\r\n  let changeHandler = ({ target: { name, value } }) => {\r\n    setRegister({ ...register, [name]: value });\r\n    // console.log(name, value)\r\n  };\r\n\r\n  let registerHandler = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(register[\"password_confirmation\"])\r\n    if (register[\"password\"] == register[\"password_confirmation\"]) {\r\n      try {\r\n        let data = await axios.post(\"/api/auth/signup\", register);\r\n        if (data.data.token) {\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          props.userLogin(data.data.token);\r\n          props.history.push(\"/\");\r\n        } else throw { message: \"something\" };\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      console.log(\"password confor is bla bla bla\");\r\n      //show error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner-container\">\r\n      <div className=\"box\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"emil\"></label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email Address \"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\"></label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\"></label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            placeholder=\"Password confirmation \"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-sm\"\r\n          onClick={(e) => registerHandler(e)}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\r\nimport Login from \"../user/Login\";\r\nimport Signup from \"../user/Signup\";\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoginOpen: true,\r\n    };\r\n  }\r\n  showLogin() {\r\n    this.setState({ isLoginOpen: true });\r\n  }\r\n  showSingup() {\r\n    this.setState({ isLoginOpen: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"user__container\">\r\n          <div className=\"user__btn\" onClick={() => this.showLogin()}>\r\n            Login\r\n          </div>\r\n          <div className=\"user__btn\" onClick={() => this.showSingup()}>\r\n            Create Account\r\n          </div>\r\n        </div>\r\n        {this.state.isLoginOpen ? (\r\n          <Login {...this.props} userLogin={this.props.userLogin} />\r\n        ) : (\r\n          <Signup {...this.props} userLogin={this.props.userLogin} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nexport const privatepage = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row xs=\"2\">\r\n          <Col>\r\n            <Container className=\"home\">\r\n              <Row>\r\n                <h1> Create private Rome </h1>\r\n              </Row>\r\n              <Row>\r\n                <input className=\"name form-control\"></input>\r\n              </Row>\r\n              <Row>\r\n                <input className=\"des form-control\"></input>\r\n              </Row>\r\n              <Row>\r\n                <select className=\"lang form-control form-control-md\">\r\n                  <option>Large select</option>\r\n                </select>\r\n              </Row>\r\n              <>\r\n                <Button className=\"btn-primary-start\" block>\r\n                  Start Game\r\n                </Button>\r\n              </>\r\n            </Container>\r\n          </Col>\r\n          <Col>\r\n            <Container className=\"player\">\r\n              <Row>\r\n                <h1> PLAYERS</h1>\r\n              </Row>\r\n              <Row>\r\n                <hr></hr>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default privatepage;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navb = (props) => {\r\n  const authNavDetails = props.user ? (\r\n    <>\r\n      <Nav.Link as={Link} to=\"/profile\" user={props.user}>\r\n        Profile\r\n      </Nav.Link>\r\n      <Nav.Link as={Link} to=\"/logout\" onClick={props.logout}>\r\n        Logout\r\n      </Nav.Link>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <Nav.Link as={Link} to=\"/login\">\r\n        Login\r\n      </Nav.Link>\r\n      <Nav.Link as={Link} to=\"/signup\">\r\n        Register\r\n      </Nav.Link>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          Kharbashah\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse\r\n          id=\"responsive-navbar-nav\"\r\n          className=\"justify-content-end\"\r\n        >\r\n          <Nav>{authNavDetails}</Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navb;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div>\r\n      <Container fluid className=\"home\">\r\n        <Row>\r\n          <h2> About </h2>\r\n        </Row>\r\n        <Row>\r\n          <p>\r\n            {\" \"}\r\n            Kharpashah is a multiplayer drawing and guessing game. <br />\r\n            One game consists of a few rounds in which every round someone has\r\n            to draw their chosen word and others have to guess it to gain\r\n            points!\r\n          </p>\r\n        </Row>\r\n        <Row>\r\n          <h2> Instructions </h2>\r\n        </Row>\r\n        <Row>\r\n          <p>\r\n            {\" \"}\r\n            When its your turn to draw, you will have to choose a word from\r\n            three options and visualize that word in 80 seconds, alternatively\r\n            when somebody else is drawing you have to type your guess into the\r\n            chat to gain points, be quick, the earlier you guess a word the more\r\n            points you get!\r\n          </p>\r\n        </Row>\r\n        <>\r\n          <Button variant=\"primary\" size=\"lg\" as={Link} to=\"/game\" block>\r\n            Start Game\r\n          </Button>\r\n          <Button variant=\"secondary\" size=\"lg\" block>\r\n            Create private room\r\n          </Button>\r\n        </>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import * as firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDmPon15pDhh6C_-bl6p_xWQrLKx1CVFJU\",\r\n  authDomain: \"project4-kharbsha.firebaseapp.com\",\r\n  databaseURL: \"https://project4-kharbsha.firebaseio.com\",\r\n  projectId: \"project4-kharbsha\",\r\n  storageBucket: \"project4-kharbsha.appspot.com\",\r\n  messagingSenderId: \"468753433035\",\r\n  appId: \"1:455668950796:web:4837c8477221e1064b0b29\",\r\n  measurementId: \"G-VSGFPEFLK4\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const getPlayerRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/playersDB\");\r\n};\r\n\r\nexport const getDrawingRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/drawingDB\");\r\n};\r\n\r\nexport const getTimerRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/timerDB\");\r\n};\r\n\r\nexport const getChatRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/chatDB\");\r\n};\r\n\r\nexport const getWordRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/wordDB\");\r\n};\r\n\r\nexport const getGameRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/gameDB\");\r\n};\r\n\r\nexport const getSessionRef = (host, sessionID) => {\r\n  return firebase.database().ref(host + sessionID + \"/sessionDB\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getPlayerRef,\r\n  getDrawingRef,\r\n  getTimerRef,\r\n  getChatRef,\r\n  getWordRef,\r\n  getGameRef,\r\n} from \"../firebase/firebase\";\r\nimport p5 from \"p5\";\r\n\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nimport queryString from \"query-string\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class Game extends Component {\r\n  myRef = React.createRef();\r\n\r\n  Sketch = (p) => {\r\n    let host, sessionID, player; // URL params\r\n    let players = []; // players in session array\r\n    let playersCount;\r\n    let gameDB, playersDB, drawingDB, chatDB, wordDB, timerDB; // realtime databases\r\n    let isDrawing = false; // Drawing vars\r\n    let words = [];\r\n    let word = \"\";\r\n    let points = []; // canvas points\r\n    let lang = \"en\";\r\n    let timer;\r\n    let timerMax = 60;\r\n    let timerInterval;\r\n    let isFormating = false;\r\n    let answered = false;\r\n    let penwidth = 6;\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0;\r\n    const values = queryString.parse(this.props.location.search);\r\n    class Word {\r\n      constructor(word) {\r\n        this.word = word;\r\n        this.wordText = document.querySelector(\".word\");\r\n        this.wordArr = word.split(\"\");\r\n        this.formatedWord = this.wordArr.map((m) => \"_\");\r\n        this.amount = parseInt(this.wordArr.length / 3);\r\n      }\r\n\r\n      renderWord() {\r\n        if (isDrawing) {\r\n          this.wordText.innerHTML = `<span>${this.word}</span>`;\r\n        } else {\r\n          if (timer >= 60) {\r\n            this.wordText.innerHTML = `<span>${this.formatedWord.join(\r\n              \" \"\r\n            )}</span>`;\r\n          }\r\n\r\n          // if (timer == 60 && !isFormating) {\r\n          //   isFormating = true;\r\n          //   this.pickRand();\r\n          //   this.wordText.innerHTML = this.formatedWord.join(\" \");\r\n          // }\r\n\r\n          if (timer == 40 && !isFormating) {\r\n            isFormating = true;\r\n            this.pickRand();\r\n            this.wordText.innerHTML = `<span>${this.formatedWord.join(\r\n              \" \"\r\n            )}</span>`;\r\n          }\r\n\r\n          if (timer == 20 && !isFormating) {\r\n            isFormating = true;\r\n            this.pickRand();\r\n            this.wordText.innerHTML = `<span>${this.formatedWord.join(\r\n              \" \"\r\n            )}</span>`;\r\n          }\r\n\r\n          if (timer == 5 && !isFormating) {\r\n            isFormating = true;\r\n            this.amount -= 1;\r\n            this.pickRand();\r\n            this.wordText.innerHTML = `<span>${this.formatedWord.join(\r\n              \" \"\r\n            )}</span>`;\r\n          }\r\n        }\r\n      }\r\n\r\n      pickRand() {\r\n        let count = 0;\r\n        while (count != this.amount) {\r\n          var rand = Math.floor(Math.random() * this.wordArr.length);\r\n          if (this.formatedWord[rand] != this.wordArr[rand]) {\r\n            count++;\r\n            this.formatedWord[rand] = this.wordArr[rand];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var currentWord = new Word(word);\r\n\r\n    p.setup = () => {\r\n      // http://localhost:3006/game?host=seerde&sessionid=1&player=seerde\r\n\r\n      // host = values.host;\r\n      // sessionID = values.sessionid;\r\n      // player = values.player;\r\n      // console.log(`Host: ${host}, Session ID: ${sessionID}, Player: ${player}`);\r\n\r\n      host = this.props.match.params.host;\r\n      sessionID = this.props.match.params.sessionid;\r\n      player = this.props.match.params.player;\r\n      lang = this.props.match.params.lang;\r\n      console.log(`Host: ${host}, Session ID: ${sessionID}, Player: ${player}`);\r\n\r\n      // Add player to session array\r\n      players.push(player);\r\n\r\n      // Creating realtime databases\r\n      playersDB = getPlayerRef(host, sessionID);\r\n      drawingDB = getDrawingRef(host, sessionID);\r\n      timerDB = getTimerRef(host, sessionID);\r\n      gameDB = getChatRef(host, sessionID);\r\n      wordDB = getWordRef(host, sessionID);\r\n      chatDB = getGameRef(host, sessionID);\r\n\r\n      //\r\n      // PLAYERS\r\n      /////////////////////////////////\r\n      playersDB.once(\"value\", (data) => {\r\n        // get old data from database\r\n        data = data.val();\r\n\r\n        // tmp object to send to database later\r\n        let tmp = {};\r\n\r\n        // new player object\r\n        let playerObj = {\r\n          isDrawing: false,\r\n          name: player,\r\n          score: 0,\r\n        };\r\n\r\n        // get old data from database modify it and send it\r\n        if (data) {\r\n          let count = 1; // players count\r\n          // if there is old data in database\r\n          Object.keys(data).forEach((key, index) => {\r\n            let player = data[key];\r\n            tmp[`${player.name}`] = player; // copy old data to tmp\r\n          });\r\n          tmp[`${playerObj.name}`] = playerObj; // add the new data to old data tmp\r\n          count = Object.keys(tmp).length; // get players count\r\n          playersDB.update(tmp); // update players\r\n          gameDB.update({\r\n            start: false,\r\n            clear: false,\r\n            loop: false,\r\n            count: count,\r\n          }); // update players count\r\n        } else {\r\n          tmp[`${playerObj.name}`] = playerObj; // add new data tmp\r\n          playersDB.set(tmp); // push data to database\r\n          gameDB.set({ start: false, clear: false, loop: false, count: 1 }); // push players count\r\n        }\r\n      });\r\n      playersDB.on(\"value\", (data) => {\r\n        data = data.val();\r\n        if (data) {\r\n          if (data.hasOwnProperty(`${player}`)) {\r\n            isDrawing = data[`${player}`].isDrawing ? true : false;\r\n          }\r\n        }\r\n      });\r\n\r\n      //\r\n      // CHAT\r\n      /////////////////////////////////\r\n      let chatDiv = p.select(\".chat\");\r\n      let chatInp = p.select(\"#inputBox\");\r\n      let chatBtn = $(\"#btnSend\");\r\n\r\n      chatBtn.on(\"click\", (e) => {\r\n        let msg = chatInp.value();\r\n        if (msg != \"\") {\r\n          chatInp.value(\"\");\r\n\r\n          wordDB.limitToLast(1).once(\"value\", (data) => {\r\n            data = data.val();\r\n            if (data.word == msg.toUpperCase() && !isDrawing && !answered) {\r\n              answered = true;\r\n              chatDB.push({\r\n                playerName: player,\r\n                msg: `Guessed the answer correctly!`,\r\n                answer: true,\r\n              });\r\n            } else {\r\n              chatDB.push({ playerName: player, msg: msg, answer: false });\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      chatDB.on(\"child_added\", (data) => {\r\n        data = data.val();\r\n        let { playerName, msg, answer } = data;\r\n\r\n        let li = p.createElement(\"li\");\r\n\r\n        let playerNameEle = p.createElement(\"strong\", playerName);\r\n        playerNameEle.class(\"primary-font\");\r\n        playerNameEle.parent(li);\r\n\r\n        let msgEle = p.createElement(\"p\", msg);\r\n\r\n        msgEle.class(\"message\");\r\n        msgEle.parent(li);\r\n        li.parent(chatDiv);\r\n\r\n        if (answer && isDrawing) {\r\n          playersDB.once(\"value\", (data) => {\r\n            data = data.val();\r\n\r\n            data[`${playerName}`].score += 10;\r\n            data[`${player}`].score += 5;\r\n\r\n            playersDB.update(data);\r\n          });\r\n        }\r\n      });\r\n\r\n      //\r\n      // DRAWING\r\n      /////////////////////////////////\r\n      let canvasDiv = document.getElementById(\"canvasContainer\");\r\n      let width = canvasDiv.offsetWidth;\r\n      let height = canvasDiv.offsetHeight;\r\n      let canvas = p.createCanvas(width, height);\r\n      canvas.mousePressed(drawKeyDown);\r\n      canvas.mouseMoved(drawKeyDownAndMoved);\r\n      canvas.parent(\"canvasContainer\");\r\n      drawingDB.on(\"child_added\", (data) => {\r\n        data = data.val();\r\n        // let {px, py, x, y} = data\r\n        // let drawingPoints = {px, py, x, y};\r\n        // r = data.r;\r\n        // g = data.g;\r\n        // b = data.b;\r\n        // penwidth = data.penwidth;\r\n        points.push(data);\r\n      });\r\n\r\n      //\r\n      // WORD\r\n      /////////////////////////////////\r\n      wordDB.set({ word: \"\" });\r\n      wordDB.on(\"value\", (data) => {\r\n        data = data.val();\r\n        word = data.word;\r\n        currentWord = new Word(word);\r\n        currentWord.renderWord();\r\n        console.log(word);\r\n      });\r\n\r\n      //\r\n      // TIMER\r\n      /////////////////////////////////\r\n      // timerDB.set({ timer: 80 });\r\n      // timerDB.on(\"value\", (data) => {\r\n      //   data = data.val();\r\n      //   timer\r\n      // });\r\n\r\n      //\r\n      // GAME\r\n      /////////////////////////////////\r\n      gameDB.on(\"value\", (data) => {\r\n        data = data.val();\r\n        if (data.start) {\r\n          startGame();\r\n        }\r\n        if (data.loop) {\r\n          console.log(\"started drawing\");\r\n          gameTimerController(true);\r\n          p.loop();\r\n        } else {\r\n          console.log(\"stopped drawing\");\r\n          points = [];\r\n          timer = 60;\r\n          answered = false;\r\n          document.querySelector(\".timer\").innerHTML = `<span>${timer}</span>`;\r\n          gameTimerController(false);\r\n          p.clear();\r\n          p.noLoop();\r\n        }\r\n      });\r\n      $(\"#draw\").on(\"click\", startRound); // draw button\r\n      $(\"#clear\").on(\"click\", nextRound); // clear button\r\n      $(\"#black\").on(\"click\", () => pickColor(0, 0, 0));\r\n      $(\"#aliceblue\").on(\"click\", () => pickColor(240, 248, 255));\r\n      $(\"#gray\").on(\"click\", () => pickColor(128, 128, 128));\r\n      $(\"#lightgray\").on(\"click\", () => pickColor(211, 211, 211));\r\n      $(\"#darkred\").on(\"click\", () => pickColor(139, 0, 0));\r\n      $(\"#brown\").on(\"click\", () => pickColor(139, 69, 19));\r\n      $(\"#red\").on(\"click\", () => pickColor(255, 0, 0));\r\n      $(\"#pink\").on(\"click\", () => pickColor(255, 192, 203));\r\n      $(\"#orange\").on(\"click\", () => pickColor(255, 165, 0));\r\n      $(\"#darkorange\").on(\"click\", () => pickColor(255, 140, 0));\r\n      $(\"#yellow\").on(\"click\", () => pickColor(255, 255, 0));\r\n      $(\"#khaki\").on(\"click\", () => pickColor(240, 230, 140));\r\n      $(\"#green\").on(\"click\", () => pickColor(0, 128, 0));\r\n      $(\"#lightgreen\").on(\"click\", () => pickColor(144, 238, 144));\r\n      $(\"#lightblue\").on(\"click\", () => pickColor(30, 144, 255));\r\n      $(\"#lightskyblue\").on(\"click\", () => pickColor(135, 206, 250));\r\n      $(\"#blue\").on(\"click\", () => pickColor(0, 0, 255));\r\n      $(\"#slateblue\").on(\"click\", () => pickColor(106, 90, 205));\r\n      $(\"#purple\").on(\"click\", () => pickColor(128, 0, 128));\r\n      $(\"#violet\").on(\"click\", () => pickColor(238, 130, 238));\r\n\r\n      $(\"#eraser\").on(\"click\", () => pickColor(255, 255, 255));\r\n\r\n      $(\"#width1\").on(\"click\", () => pickPenwidth(5));\r\n      $(\"#width2\").on(\"click\", () => pickPenwidth(15));\r\n      $(\"#width3\").on(\"click\", () => pickPenwidth(25));\r\n      $(\"#width4\").on(\"click\", () => pickPenwidth(40));\r\n\r\n      // stop draw() from looping\r\n      p.noLoop();\r\n    };\r\n    p.draw = () => {\r\n      p.stroke(r, g, b);\r\n      p.strokeWeight(penwidth);\r\n      p.noFill();\r\n\r\n      for (let i = 0; i < points.length; i++) {\r\n        let point = points[i];\r\n        p.stroke(point.r, point.g, point.b);\r\n        p.strokeWeight(point.penwidth);\r\n        p.line(point.x, point.y, point.px, point.py);\r\n      }\r\n    };\r\n    p.windowResized = () => {\r\n      let canvasDiv = document.getElementById(\"canvasContainer\");\r\n      let width = canvasDiv.offsetWidth;\r\n      let height = canvasDiv.offsetHeight;\r\n      p.resizeCanvas(width, height);\r\n    };\r\n\r\n    function startRound() {\r\n      playersDB.once(\"value\", (playersData) => {\r\n        playersData = playersData.val();\r\n\r\n        // get players count\r\n        gameDB.once(\"value\", (gameData) => {\r\n          gameData = gameData.val();\r\n          playersCount = gameData.count;\r\n          // pick random player\r\n          let rand = Math.floor(Math.random() * playersCount);\r\n          // get player data\r\n          let getPlayer = playersData[Object.keys(playersData)[rand]];\r\n          // mark the player as isDrawing\r\n          getPlayer.isDrawing = true;\r\n          if (getPlayer.name == player) {\r\n            isDrawing = true;\r\n          }\r\n          gameData.start = true;\r\n          // update the database\r\n          playersDB.update(playersData);\r\n          gameDB.update(gameData);\r\n        });\r\n      });\r\n    }\r\n\r\n    async function startGame() {\r\n      if (isDrawing) {\r\n        // get 3 random words\r\n        try {\r\n          let wordsArry = await axios.get(`/api/word/${lang}/random/1/1/1`);\r\n          words = wordsArry.data.randomWords;\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n        renderWordsBtn();\r\n      }\r\n    }\r\n\r\n    function renderWordsBtn() {\r\n      let gameScreen = $(\"#canvasContainer\");\r\n      gameScreen.css(\"position\", \"relative\");\r\n      gameScreen.append(\"<div class='words__btn'></div>\");\r\n\r\n      let wordsBtn = $(\".words__btn\");\r\n      wordsBtn.css({\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        position: \"absolute\",\r\n        width: \"80%\",\r\n        top: \"50%\",\r\n        left: \"20px\",\r\n        color: \"red\",\r\n      });\r\n\r\n      words.forEach((e) => {\r\n        wordsBtn.append(`<div class='word__btn'>${e}</div>`);\r\n      });\r\n\r\n      $(\".word__btn\").css({\r\n        fontSize: \"24px\",\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(25, 26, 35, 0.7)\",\r\n      });\r\n\r\n      $(\".word__btn\").on(\"click\", (e) => {\r\n        word = e.target.innerHTML;\r\n        $(\".words__btn\").remove();\r\n        // database.push({ start: true, player: player, word: word });\r\n        gameDB.once(\"value\", (data) => {\r\n          data = data.val();\r\n          data.loop = true;\r\n          data.start = false;\r\n          gameDB.update(data);\r\n        });\r\n        wordDB.update({ word: word.toUpperCase() });\r\n      });\r\n    }\r\n\r\n    function nextRound() {\r\n      drawingDB.remove();\r\n      chatDB.remove();\r\n      gameDB.once(\"value\", (gameData) => {\r\n        gameData = gameData.val();\r\n        gameData.loop = false;\r\n        gameDB.update(gameData);\r\n\r\n        playersDB.once(\"value\", (playersData) => {\r\n          playersData = playersData.val();\r\n          let tmpIndex = 0;\r\n          Object.keys(playersData).forEach((key, index) => {\r\n            if (playersData[key].isDrawing) {\r\n              playersData[key].isDrawing = false;\r\n              tmpIndex = index == gameData.count - 1 ? 0 : index + 1;\r\n            }\r\n          });\r\n          let getPlayer = playersData[Object.keys(playersData)[tmpIndex]];\r\n          getPlayer.isDrawing = true;\r\n          if (getPlayer.name == player) {\r\n            isDrawing = true;\r\n          }\r\n          gameData.start = true;\r\n          playersDB.update(playersData);\r\n          gameDB.update(gameData);\r\n        });\r\n      });\r\n    }\r\n\r\n    function drawKeyDown() {\r\n      if (isDrawing) {\r\n        points.push({\r\n          x: p.mouseX,\r\n          y: p.mouseY,\r\n          px: p.pmouseX,\r\n          py: p.pmouseY,\r\n          r,\r\n          g,\r\n          b,\r\n          penwidth,\r\n        });\r\n        drawingDB.push({\r\n          x: p.mouseX,\r\n          y: p.mouseY,\r\n          px: p.pmouseX,\r\n          py: p.pmouseY,\r\n          r,\r\n          g,\r\n          b,\r\n          penwidth,\r\n        });\r\n      }\r\n    }\r\n\r\n    function drawKeyDownAndMoved() {\r\n      if (p.mouseIsPressed && isDrawing) {\r\n        drawKeyDown();\r\n      }\r\n    }\r\n\r\n    function gameTimerController(state) {\r\n      if (state) {\r\n        console.log(\"started time\", timerInterval);\r\n        let start = new Date();\r\n        timerInterval = setInterval(() => {\r\n          let currentTime = new Date();\r\n          let count = +currentTime - +start;\r\n          let seconds = Math.floor(count / 1000) % 60;\r\n          timer = timerMax - seconds;\r\n          isFormating = false;\r\n          document.querySelector(\".timer\").innerHTML = `<span>${timer}</span>`;\r\n          currentWord.renderWord();\r\n          if (timer == 1) {\r\n            clearInterval();\r\n            if (isDrawing) {\r\n              nextRound();\r\n            }\r\n          }\r\n\r\n          // if (timer > 0) {\r\n          //   timer--;\r\n          //   isFormating = false;\r\n          //   document.querySelector(\".timer\").innerHTML = timer;\r\n          //   currentWord.renderWord();\r\n          // } else {\r\n          //   if (isDrawing) {\r\n          //   }\r\n          // }\r\n        }, 1000);\r\n      } else {\r\n        console.log(\"stoped time\", timerInterval);\r\n        clearInterval(timerInterval);\r\n      }\r\n    }\r\n\r\n    function pickColor(newR, newG, newB) {\r\n      console.log(\"test\");\r\n      r = newR;\r\n      g = newG;\r\n      b = newB;\r\n    }\r\n    function pickPenwidth(newPenwidth) {\r\n      console.log(\"tttt\");\r\n      penwidth = newPenwidth;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"all__view\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-9\">\r\n              <div className=\"game__container\">\r\n                <div className=\"row inner__game__container\">\r\n                  <div className=\"col-2 leaderboard__container\">\r\n                    <div></div>\r\n                  </div>\r\n                  <div className=\"col-9 drawing__container\">\r\n                    <div className=\"timer\">\r\n                      <span>60</span>\r\n                    </div>\r\n                    <div id=\"canvasContainer\" className=\"canvasContainer\"></div>\r\n                    <div className=\"word\">\r\n                      <span>WORD</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-1 tools__container\">\r\n                    <div className=\"row tools1\">\r\n                      <div className=\"pen__box__row\">\r\n                        <div\r\n                          id=\"eraser\"\r\n                          className=\"pen__box\"\r\n                          style={{ marginTop: \"10px\" }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"pen__box__row\">\r\n                        <div\r\n                          id=\"width1\"\r\n                          className=\"pen__box\"\r\n                          style={{ backgroundColor: \"gray\" }}\r\n                        >\r\n                          5\r\n                        </div>\r\n                        <div\r\n                          id=\"width2\"\r\n                          className=\"pen__box\"\r\n                          style={{ backgroundColor: \"gray\" }}\r\n                        >\r\n                          15\r\n                        </div>\r\n                        <div\r\n                          id=\"width3\"\r\n                          className=\"pen__box\"\r\n                          style={{ backgroundColor: \"gray\" }}\r\n                        >\r\n                          25\r\n                        </div>\r\n                        <div\r\n                          id=\"width4\"\r\n                          className=\"pen__box\"\r\n                          style={{ backgroundColor: \"gray\" }}\r\n                        >\r\n                          40\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row tools2\">\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"aliceblue\" className=\"color__box\"></div>\r\n                        <div id=\"black\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"lightgray\" className=\"color__box\"></div>\r\n                        <div id=\"gray\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"brown\" className=\"color__box\"></div>\r\n                        <div id=\"darkred\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"pink\" className=\"color__box\"></div>\r\n                        <div id=\"red\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"darkorange\" className=\"color__box\"></div>\r\n                        <div id=\"orange\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"khaki\" className=\"color__box\"></div>\r\n                        <div id=\"yellow\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"lightgreen\" className=\"color__box\"></div>\r\n                        <div id=\"green\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"lightskyblue\" className=\"color__box\"></div>\r\n                        <div id=\"lightblue\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"slateblue\" className=\"color__box\"></div>\r\n                        <div id=\"blue\" className=\"color__box\"></div>\r\n                      </div>\r\n                      <div className=\"color__box__row\">\r\n                        <div id=\"violet\" className=\"color__box\"></div>\r\n                        <div id=\"purple\" className=\"color__box\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <div className=\"chat__container\">\r\n                <div id=\"chat\">\r\n                  <div className=\"col\">\r\n                    <div className=\"panel panel-primary\">\r\n                      <div className=\"panel-heading\">\r\n                        <span className=\"glyphicon glyphicon-comment\"></span>{\" \"}\r\n                        Chat\r\n                      </div>\r\n                      <div className=\"panel-body\">\r\n                        <ul className=\"chat\"></ul>\r\n                      </div>\r\n                      <div className=\"panel-footer\">\r\n                        <div className=\"input-group\">\r\n                          <input\r\n                            id=\"inputBox\"\r\n                            type=\"text\"\r\n                            className=\"form-control input-sm\"\r\n                            placeholder=\"Enter your guess\"\r\n                          />\r\n                          <span className=\"input-group-btn\">\r\n                            <button\r\n                              className=\"btn btn-warning btn-sm\"\r\n                              id=\"btnSend\"\r\n                            >\r\n                              Send\r\n                            </button>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button id=\"draw\">start</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getSessionRef } from \"../firebase/firebase\";\r\n\r\nexport default class GameRedirect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.check = false;\r\n    this.lang = \"en\";\r\n    this.state = {\r\n      redirect: false,\r\n      host: this.props.match.params.host,\r\n      sessionID: this.props.match.params.sessionid,\r\n      players: [],\r\n      sessionDB: \"\",\r\n    };\r\n  }\r\n\r\n  setup = () => {\r\n    this.check = true;\r\n    let { host, sessionID } = this.state;\r\n    let player = this.props.user;\r\n    let sessionDB = getSessionRef(host, sessionID);\r\n    if (host == player.username) {\r\n      sessionDB.remove();\r\n    }\r\n\r\n    //\r\n    // SESSION\r\n    /////////////////////////////////\r\n    sessionDB.once(\"value\", (data) => {\r\n      data = data.val();\r\n      let tmp = {};\r\n      let playerObj = player;\r\n\r\n      if (data) {\r\n        tmp.players = {};\r\n        Object.keys(data.players).forEach((key, index) => {\r\n          let player = data.players[key];\r\n          tmp.players[`${player.username}`] = player;\r\n        });\r\n        tmp.players[`${playerObj.username}`] = playerObj;\r\n        if (host != player.username) {\r\n        }\r\n        sessionDB.update(tmp);\r\n      } else {\r\n        tmp.players = {};\r\n        tmp.players[`${playerObj.username}`] = playerObj;\r\n        tmp[\"start\"] = false;\r\n        sessionDB.set(tmp);\r\n      }\r\n      this.setState({\r\n        sessionDB: getSessionRef(host, sessionID),\r\n      });\r\n    });\r\n    sessionDB.on(\"value\", (data) => {\r\n      data = data.val();\r\n      if (data) {\r\n        if (data.start) {\r\n          this.lang = data.lang;\r\n          let rand = Math.floor(Math.random() * 1000);\r\n          setTimeout(this.setRedirect, rand);\r\n          // this.setRedirect();\r\n        }\r\n        if (data.players) {\r\n          let tmpArry = [];\r\n          Object.keys(data.players).forEach((key) => {\r\n            tmpArry.push(data.players[key]);\r\n          });\r\n          this.setState({\r\n            players: tmpArry,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.setRedirect();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.check) {\r\n      this.setup();\r\n    }\r\n  }\r\n\r\n  langSelect(e) {\r\n    this.lang = e.target.value;\r\n  }\r\n\r\n  startGame() {\r\n    if (this.state.host == this.props.user.username) {\r\n      this.state.sessionDB.once(\"value\", (data) => {\r\n        data = data.val();\r\n        if (data) {\r\n          data.start = true;\r\n          data.lang = this.lang;\r\n          this.state.sessionDB.update(data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    return (\r\n      <Redirect\r\n        to={`/game/${this.props.match.params.host}/${this.props.match.params.sessionid}/${this.props.user.username}/${this.lang}`}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    let playersCards = this.state.players.map((player, key) => {\r\n      return <div key={key}>{player.username}</div>;\r\n    });\r\n    return (\r\n      <>\r\n        {this.state.redirect && this.props.user ? this.renderRedirect() : null}\r\n        <Container>\r\n          <Row xs=\"2\">\r\n            <Col>\r\n              <Container className=\"home\">\r\n                <Row>\r\n                  <h1> Create private Rome </h1>\r\n                </Row>\r\n                <Row>\r\n                  <select\r\n                    className=\"lang form-control form-control-md\"\r\n                    onChange={(e) => {\r\n                      this.langSelect(e);\r\n                    }}\r\n                  >\r\n                    <option value=\"en\">English</option>\r\n                    <option value=\"ar\">Arabic</option>\r\n                  </select>\r\n                </Row>\r\n                <>\r\n                  <Button\r\n                    className=\"btn-primary-start\"\r\n                    block\r\n                    onClick={() => this.startGame()}\r\n                  >\r\n                    Start Game\r\n                  </Button>\r\n                </>\r\n              </Container>\r\n            </Col>\r\n            <Col>\r\n              <Container className=\"player\">\r\n                <Row>\r\n                  <h1> PLAYERS</h1>\r\n                  {playersCards}\r\n                </Row>\r\n                <Row>\r\n                  <hr></hr>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport { decode } from \"jsonwebtoken\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport User from \"./components/user/User.js\";\r\nimport privatepage from \"./components/home/privatepage.js\";\r\nimport Navb from \"./components/navbar/Navb\";\r\nimport { Home } from \"./components/home/Home\";\r\nimport Login from \"./components/user/Login\";\r\nimport Signup from \"./components/user/Signup\";\r\nimport Game from \"./components/game/Game\";\r\nimport GameRedirect from \"./components/user/GameRedirect.js\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isAuth: false,\r\n    user: null,\r\n  };\r\n\r\n  logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n\r\n    this.setState({\r\n      isAuth: false,\r\n      user: null,\r\n    });\r\n  };\r\n\r\n  userLogin = async (token) => {\r\n    try {\r\n      let data = await axios.get(\"/api/auth/user\", {\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n\r\n      this.setState({\r\n        isAuth: true,\r\n        user: data.data.user,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        user: null,\r\n        isAuth: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let token = localStorage.getItem(\"token\");\r\n    if (!(token == null)) {\r\n      let user = decode(token);\r\n\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n\r\n      this.userLogin(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isAuth, user } = this.state;\r\n    return (\r\n      <div>\r\n        <Navb user={user} logout={this.logoutHandler} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/room\" component={privatepage} />} />\r\n          <Route\r\n            path=\"/user\"\r\n            render={(props) => <User {...props} userLogin={this.userLogin} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/game/:host/:sessionid\"\r\n            render={(props) => <GameRedirect user={user} {...props} />}\r\n          />\r\n          >\r\n          <Route\r\n            exact\r\n            path=\"/game/:host/:sessionid/:player/:lang\"\r\n            render={(props) => <Game {...props} userLogin={this.userLogin} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}